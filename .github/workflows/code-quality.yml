name: Code Quality

on:
  push:
    branches: [ master, develop, B-002-store-core ]
  pull_request:
    branches: [ master, develop ]

permissions:
  contents: read
  issues: write
  pull-requests: write
  statuses: write
  checks: write

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Swift
      uses: slashmo/install-swift@v1
      with:
        version: "5.9"
        
    - name: Install SwiftLint
      run: |
        curl -sL https://github.com/realm/SwiftLint/releases/download/0.61.0/swiftlint_linux.zip -o swiftlint.zip
        unzip swiftlint.zip
        sudo mv swiftlint /usr/local/bin/
        rm swiftlint.zip
        
    - name: Run SwiftLint
      run: swiftlint lint --reporter github-actions-logging
      
    - name: Check Code Coverage
      run: |
        swift test --enable-code-coverage
        
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: .build/debug/codecov/default.profdata
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Swift
      uses: slashmo/install-swift@v1
      with:
        version: "5.9"
        
    - name: Check for outdated dependencies
      run: |
        swift package show-dependencies --format json > dependencies.json
        echo "Dependencies checked successfully"
        
    - name: Upload dependency report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-report
        path: dependencies.json
