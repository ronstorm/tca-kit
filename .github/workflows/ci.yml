name: CI

on:
  push:
    branches: [ master, develop, B-002-store-core ]
  pull_request:
    branches: [ master, develop ]

permissions:
  contents: read
  issues: write
  pull-requests: write
  statuses: write
  checks: write

env:
  XCODE_VERSION: '16.0'
  IOS_SIMULATOR: 'iPhone 16'
  IOS_VERSION: '18.6'
  DEVELOPER_DIR: /Applications/Xcode_16.0.app/Contents/Developer

jobs:
  test:
    name: Test
    runs-on: macos-15
    
    strategy:
      matrix:
        platform: [iOS, macOS, tvOS, watchOS]
        xcode: ['16.0']
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app/Contents/Developer
      
    - name: Cache Swift Package Manager
      uses: actions/cache@v4
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Cache SwiftLint
      uses: actions/cache@v4
      with:
        path: .swiftlint-cache
        key: ${{ runner.os }}-swiftlint-${{ hashFiles('.swiftlint.yml') }}
        restore-keys: |
          ${{ runner.os }}-swiftlint-
          
    - name: Install SwiftLint
      run: |
        if ! command -v swiftlint &> /dev/null; then
          brew install swiftlint
        fi
        
    - name: Run SwiftLint
      run: swiftlint lint --reporter github-actions-logging
      
    - name: Build Package
      run: swift build
      
    - name: Test Package
      run: swift test
      
    - name: Test on ${{ matrix.platform }}
      run: |
        case "${{ matrix.platform }}" in
          iOS)
            xcodebuild test -scheme tca-kit-Package -destination 'platform=iOS Simulator,name=${{ env.IOS_SIMULATOR }},OS=${{ env.IOS_VERSION }}'
            ;;
          macOS)
            xcodebuild test -scheme tca-kit-Package -destination 'platform=macOS'
            ;;
          tvOS)
            xcodebuild test -scheme tca-kit-Package -destination 'platform=tvOS Simulator,name=Apple TV 4K (3rd generation),OS=latest'
            ;;
          watchOS)
            xcodebuild test -scheme tca-kit-Package -destination 'platform=watchOS Simulator,name=Apple Watch Series 9 (45mm),OS=latest'
            ;;
        esac

  lint:
    name: Lint
    runs-on: macos-15
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Install SwiftLint
      run: |
        if ! command -v swiftlint &> /dev/null; then
          brew install swiftlint
        fi
        
    - name: Run SwiftLint
      run: swiftlint lint --reporter github-actions-logging

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  documentation:
    name: Documentation
    runs-on: macos-15
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Swift
      uses: slashmo/install-swift@v1
      with:
        version: "5.9"
        
    - name: Generate Documentation
      run: |
        swift package generate-documentation --target TCAKit
        
    - name: Upload Documentation
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: .build/docs/
